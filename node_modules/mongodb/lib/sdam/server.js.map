const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');

const app = express();
app.use(cors());
app.use(express.json());

// ✅ Replace this string with your actual connection string from MongoDB Atlas
const mongoURI = "mongodb+srv://mentoruser:mentorpass123@cluster0.abcd123.mongodb.net/mentorDB?retryWrites=true&w=majority";

// 🔌 Connect to MongoDB
mongoose.connect(mongoURI, {
  useNewUrlParser: true,
  useUnifiedTopology: true
})
.then(() => console.log('✅ Connected to MongoDB'))
.catch(err => console.error('❌ MongoDB connection error:', err));

// 📄 Define what a “tribute” looks like
const TributeSchema = new mongoose.Schema({
  mentee: String,
  mentor: String,
  location: String,
  date: { type: Date, default: Date.now }
});

const Tribute = mongoose.model('Tribute', TributeSchema);

// 📥 Get all tributes
app.get('/tributes', async (req, res) => {
  try {
    const tributes = await Tribute.find().sort({ date: -1 });
    res.json(tributes);
  } catch (err) {
    res.status(500).json({ error: 'Failed to fetch tributes' });
  }
});

// 📤 Add a new tribute
app.post('/tributes', async (req, res) => {
  try {
    const tribute = new Tribute(req.body);
    await tribute.save();
    res.json(tribute);
  } catch (err) {
    res.status(500).json({ error: 'Failed to save tribute' });
  }
});

// 🚀 Start the server
const PORT = 4000;
app.listen(PORT, () => console.log(`🚀 Server running on port ${PORT}`));
